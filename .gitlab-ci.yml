# NOTE: This file is auto generated by OpenAPI Generator.
# URL: https://openapi-generator.tech
#
# ref: https://docs.gitlab.com/ee/ci/README.html
# ref: https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Python.gitlab-ci.yml

stages:
  - test
  - build
  - publish

.pytest:
  stage: test
  tags: 
    - aliyun-sit-runner
  variables:
    PRIVATE_KEY: $PRIVATE_KEY
    X_PARTNER_ID: $X_PARTNER_ID
    ORIGIN: $ORIGIN
    CHANNEL_ID: $CHANNEL_ID
    MERCHANT_ID: $MERCHANT_ID
  script:
    - pip install -r requirements.txt
    - pip install -r test-requirements.txt
    - pytest -v -s --cov=dana.payment_gateway.v1

pytest-3.9:
  extends: .pytest
  image: python:3.9-alpine
pytest-3.10:
  extends: .pytest
  image: python:3.10-alpine
pytest-3.11:
  extends: .pytest
  image: python:3.11-alpine
pytest-3.12:
  extends: .pytest
  image: python:3.12-alpine

build-package:
  stage: build
  image: python:3.11
  tags: 
    - aliyun-sit-runner
  script:
    - pip install poetry
    - poetry install
    - |
      if [[ "$CI_COMMIT_TAG" =~ ^v[0-9]+\.[0-9]+(\.[0-9]+)?(-rc\.[0-9]+)?$ ]]; then
        VERSION="${CI_COMMIT_TAG#v}"
        sed -i "s/^version = .*/version = \"$VERSION\"/" pyproject.toml
        echo "Updated version to: $VERSION"
      else
        echo "Tag format invalid or not provided. Skipping version update."
      fi
    - poetry build
  artifacts:
    paths:
      - dist/
    expire_in: 1h
  needs:
    - pytest-3.9
    - pytest-3.10
    - pytest-3.11
    - pytest-3.12
  only:
    - tags

publish-gitlab:
  stage: publish
  image: python:3.11
  tags: 
    - aliyun-sit-runner
  before_script:
    - pip install poetry
    - |
      if [[ "$CI_COMMIT_TAG" =~ ^v[0-9]+\.[0-9]+(\.[0-9]+)?(-rc\.[0-9]+)?$ ]]; then
        VERSION="${CI_COMMIT_TAG#v}"
        sed -i "s/^version = .*/version = \"$VERSION\"/" pyproject.toml
        echo "Updated version to: $VERSION"
      else
        echo "Tag format invalid or not provided. Skipping version update."
      fi
  script:
    - ls -lh dist
    - poetry config repositories.gitlab "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi"
    - poetry config http-basic.gitlab gitlab-ci-token "$CI_JOB_TOKEN"
    - poetry publish -r gitlab
  needs:
    - job: build-package
      artifacts: true 
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+-rc\.\d+$/'
      when: always

publish-pypi:
  stage: publish
  image: python:3.11
  tags: 
    - aliyun-sit-runner
  before_script:
    - pip install poetry
    - |
      if [[ "$CI_COMMIT_TAG" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
        VERSION="${CI_COMMIT_TAG#v}"
        sed -i "s/^version = .*/version = \"$VERSION\"/" pyproject.toml
        echo "Updated version to: $VERSION"
      else
        echo "Tag format invalid or not provided. Skipping version update."
      fi
  script:
    - pip install poetry
    - poetry config pypi-token.pypi "$PYPI_TOKEN"
    - poetry publish --no-interaction
  needs:
    - job: build-package
      artifacts: true
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+$/'
      when: manual
